name: Deploy Backend Infrastructure

on:
  push:
    paths:
      - "infra/**"
      - "backend/**"
    branches:
      - main

env:
  AWS_REGION: us-east-1

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.11.4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install Python packages and create Lambda ZIPs
        run: |
          cd backend/DeadManSwitchHandler
          mkdir -p build && rm -rf build/*
          pip install -r requirements.txt -t build/
          cp lambda_function.py build/
          cd build && zip -r ../handler.zip .

          cd ../../DeadManSwitchChecker
          mkdir -p build && rm -rf build/*
          pip install -r requirements.txt -t build/
          cp lambda_function.py build/
          cd build && zip -r ../checker.zip .

      - name: Terraform Init
        working-directory: infra
        run: terraform init

      - name: Terraform Apply
        working-directory: infra
        run: terraform apply -auto-approve
        env:
          TF_VAR_sender_email: ${{ secrets.SENDER_EMAIL }}
          TF_VAR_firebase_client_email: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
          TF_VAR_firebase_private_key: ${{ secrets.FIREBASE_PRIVATE_KEY }}
          TF_VAR_firebase_project_id: ${{ secrets.FIREBASE_PROJECT_ID }}
          TF_VAR_firebase_client_id: ${{ secrets.FIREBASE_CLIENT_ID }}
          TF_VAR_firebase_private_key_id: ${{ secrets.FIREBASE_PRIVATE_KEY_ID }}
          TF_VAR_firebase_client_x509_cert_url: ${{ secrets.FIREBASE_CLIENT_X509_CERT_URL }}